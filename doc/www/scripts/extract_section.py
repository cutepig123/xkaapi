#!/usr/bin/env python

# extract a section from a single html
# file generated by latex2html Manual.tex
# output the section in oname

import sys
import re


# compiled regular expressions
sindex_re = re.compile('^.+SECTION0+(\d{1})\d+.+$')
sentry_re = re.compile('^.+>(.+)</A>$')
start_re = re.compile('^.*<A NAME="SECTION.+$')

def read_line(ifile):
    line = ifile.readline()
    if line == None or len(line) == 0:
        return None
    return line.strip()

def write_line(ofile, line):
    ofile.write(line + '\n')

def match_and_get_first(rexp, line):
    # find a pattern and return first of group
    m = rexp.match(line)
    if m == None:
        return None
    return m.groups()[0]

def get_sindex(sname, ifile):
    # get the section index given the name
    # assume ifile starts with a toc
    while True:
        line = read_line(ifile)
        if line == None:
            break
        if line == '<!--End of Table of Contents-->':
            break
        s = match_and_get_first(sentry_re, line)
        if s == None or s != sname:
            continue
        s = match_and_get_first(sindex_re, line)
        if s == None:
            continue
        return s
    return None

def seek_to(ifile, val):
    while True:
        line = read_line(ifile)
        if line == None:
            break
        if line == val:
            break
    return

def sindex_from_line(line):
    # section index from line
    return match_and_get_first(sindex_re, line)

def extract_section(sindex, ifile, ofile):
    # skip index and toc
    seek_to(ifile, '<!--End of Table of Contents-->')
    is_found = False # find section start
    while True:
        line = read_line(ifile)
        if line == None:
            break
        if is_found == False: # find section start
            if start_re.match(line) == None:
                continue
            if sindex_from_line(line) != sindex:
                continue
            is_found = True
        elif is_found == True:
            if start_re.match(line) != None:
                # this is a new section, stop processing
                if sindex_from_line(line) != sindex:
                    break
        # output line
        write_line(ofile, line)
    return

def main(sname, iname, oname):
    ifile = open(iname, 'r')
    if ifile == None:
        return -1
    ofile = open(oname, 'w')
    if ofile == None:
        return -1
    sindex = get_sindex(sname, ifile)
    if sindex != None:
        extract_section(sindex, ifile, ofile)
    ifile.close()
    ofile.close()
    return 0

sys.exit(main(sys.argv[1], sys.argv[2], sys.argv[3]))
