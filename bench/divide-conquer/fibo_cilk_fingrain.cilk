/*
 * Copyright (c) 1994-2003 Massachusetts Institute of Technology
 * Copyright (c) 2003 Bradley C. Kuszmaul
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 */

#include <iostream>
#include <stdlib.h>
#include <sys/time.h>

/**
*/
double get_elapsedtime(void)
{
  struct timeval tv;
  int err = gettimeofday( &tv, 0);
  if (err  !=0) return 0;
  return (double)tv.tv_sec + 1e-6*(double)tv.tv_usec;
}

/*
*/
long fib(long n)
{
     if (n < 2)
	  return (n);
     else {
	  long x, y;
	  x = cilk_spawn fib(n - 1);
	  y = cilk_spawn fib(n - 2);
	  cilk_sync;
	  return (x + y);
     }
}

void do_experiment(int argc, char* argv[])
{
  unsigned int n = 30;
  if (argc > 1) n = atoi(argv[1]);
  unsigned int iter = 1;
  if (argc > 2) iter = atoi(argv[2]);

  long res = 0;
  double start_time, stop_time;
  start_time = get_elapsedtime();
  for (int i=0; i<iter; ++i)
  {
    res = cilk_spawn fib(n);
  }
  stop_time = get_elapsedtime();
  std::cout << ": Res = " << res << std::endl;
  std::cout << ": Time(s): " << (stop_time-start_time)/iter << std::endl;
}

int cilk_main(int argc, char *argv[])
{
  do_experiment(argc, argv );
}
