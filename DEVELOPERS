Developers Instructions
***********************

I. Autotools:
==============

This project uses the autotools (autoconf, automake, autotest, etc.)
See INSTALL for instruction about how to compile and install X-Kaapi.

II. Autotest:
=============
For testing this project, the autotest framework is used. Some information
can be found here:
http://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.69/html_node/Using-Autotest.html

II.1 Using Autotest:
********************
As a user of the test suite, you can run (from the build tests/ subdirectory)
the testsuite script in the tests/ *sources* subdirectory. The easiest way to
archive this is to type "make check".
  The testsuite script has lots of useful options. For example:
* "-l" option will list all tests with their keywords
* "-k k1,k2 -k k3" will only run tests with keywords (k1 and k2) or k3
  keywords can be negated with '!' (protect it from bash)
* "-v" will run tests in verbose mode

  If one test fails, its number is shown and you will find information and
logs into the testsuite.dir/[number]/ directory. In particular, you will find
here a 'run' script that can rerun the failed test in verbose mode.

  When using "make check" to call the testsuite script, options can be
passed using the TESTSUITEFLAGS variable:
make check TESTSUITEFLAGS="-k fibo"  # run all tests with the 'fibo' keyword
make check TESTSUITEFLAGS="-l"       # list all available tests
make check TESTSUITEFLAGS="26"       # run the test numbered 26
# more complex: run all tests but the ones that clean the compilation
# nor the ones from the GCC libgomp testsuite. Compilation is done in parallel.
# This is probably very useful when doing development
make check TESTSUITEFLAGS='-k !clean,!gcc-testsuite' -j

When TESTSUITEFLAGS is not explicitely defined, its default value is
'-k !gcc-testsuite' (ie all tests but the ones from the GCC libgomp testsuite).

II.1 Writing tests for Autotest:
********************************
Only basic instructions are provided here, adapted to the xkaapi source layout.
For more complex cases, please refer to the official documentation:
http://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.69/html_node/Writing-Testsuites.html

  Tests are written into testsuite-*.at files located into the tests/
subdirectory.  The various testsuite-*.at files must be included into the main
testsuite.at and also into the Makefile.am

  In a testsuite-*.at, you can use the following macros:
AT_BANNER([title])
  This allows to group some tests (generally one such macro at the start of the at file)
AT_SETUP([name])
  This starts a group test, giving it a name.
AT_CLEANUP
  This finishes a group test

And, bewteen AT_SETUP and AT_CLEANUP, one can use (one or more times):
AT_KEYWORDS([keyword space separated list])
  List of keywords linked to this test
AT_SKIP_IF([simple script test])
  The test will be skipped if the script returns true (0)
AT_CHECK([command], [expected exit code], [expected output], [expected stderr])
  Execute a test. Note that some exit values have special meaning (77 to skip
  the current test group, ...) and some special keywords can be used for expected
  exit code, output or stderr.

Of course, new macros can be defined to avoid to retype the same information
(see testsuite-libkaapic.at for example)

